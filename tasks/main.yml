# tasks file
---
- name: include variables
  include_vars: "{{ item }}"
  with_first_found:
    - "_{{ ansible_distribution_release }}.yml"
    - "_{{ ansible_distribution | lower }}.yml"
    - _default.yml
  tags:
    - configuration
    - nagios-client
    - nagios-client-include-variables

- name: install dependencies
  apt:
    name: "{{ nagios_client_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
  tags:
    - configuration
    - nagios-client
    - nagios-client-dependencies

- name: install additional
  apt:
    name: "{{ nagios_client_install }}"
    state: "{{ apt_install_state | default('latest') }}"
  tags:
    - configuration
    - nagios-client
    - nagios-client-install

- name: add group
  group:
    name: "{{ item }}"
    system: true
  with_flattened:
    - "{{ nagios_client_group }}"
    - "{{ nagios_client_groups }}"
  tags:
    - configuration
    - nagios-client
    - nagios-client-add-group

- name: add user
  user:
    name: "{{ nagios_client_user }}"
    system: true
    group: "{{ nagios_client_group }}"
    groups: "{{ nagios_client_groups | join(',') }}"
  tags:
    - configuration
    - nagios-client
    - nagios-client-add-user

- name: create authorized_keys from public key
  authorized_key:
    user: "{{ nagios_client_user }}"
    key: "{{ lookup('file', item.src) }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ nagios_client_authorized_keys }}"
  tags:
    - configuration
    - nagios-client
    - nagios-client-authorized-keys

- name: copy script files
  copy:
    src: "{{ item.value.src }}"
    dest: "{{ item.value.dest }}"
    owner: "{{ item.value.owner | default('root') }}"
    group: "{{ item.value.group | default('root') }}"
    mode: "{{ item.value.mode | default('0755') }}"
  with_dict: "{{ nagios_client_script_map }}"
  tags:
    - configuration
    - nagios-client
    - nagios-client-scripts
